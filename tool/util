#!/usr/bin/bash

if [[ ! -e $project_root ]]
then
	exit 1
fi

source_dir="$HOME/Source"
install_prefix="$HOME/.local"

build_dir="$project_root/build"
cache_file="$build_dir/dependency_stat"

check_depstat()
{
	if [[ -s $cache_file && "$1=$TARGET_PLATFORM" == "$(grep -s "$1" $cache_file)" ]]
	then
		exit 0
	fi
}

set_depstat()
{
	if grep -qs "^$1=" $cache_file
	then
		sed -i "s/^$1=.*/$1=$TARGET_PLATFORM/" $cache_file
	else
		mkdir -p $build_dir
		echo "$1=$TARGET_PLATFORM" >> $cache_file
	fi
}

temp_stderr=$(mktemp)

exec 3>/dev/null

spinner()
{
	local pid=$!
	local spin='-\|/'
	local i=0

	while kill -0 $pid 2>/dev/null
	do
		i=$(((i + 1) % 4))
		printf '%s\b' "${spin:$i:1}"
		sleep .2
	done
}

process_start()
{
	printf '%s... ' "$1"
}

process_exec() {
	eval "$1" 2> >(grep -v "WARNING" > $temp_stderr) >&3 & spinner
}

process_end()
{
	if [[ -s $temp_stderr ]]
	then
		echo 'no'
		cat $temp_stderr >&2
		truncate -s 0 $temp_stderr
	else
		echo 'ok'
	fi
}

process_cleanup()
{
	rm $temp_stderr
}

grep_rdcred()
{
	grep "^$1=" $project_root/remote.info | cut -d '=' -f2
}