skip_matched_depstat 'sqlcipher'

prepare_extsrc 'sqlcipher' 'https://github.com/sqlcipher/sqlcipher.git'

source "$BRTOOL_SOURCE_PREFIX"/uihandle

options="--disable-shared --disable-tcl --enable-releasemode --enable-tempstore=yes --prefix=$LIBRARY_INSTALL_PREFIX"
cflags="-I$LIBRARY_INSTALL_PREFIX/include -DSQLITE_HAS_CODEC -fPIE -w"
ldflags="-L$LIBRARY_INSTALL_PREFIX/lib64 -lcrypto"

if [[ -s Makefile ]]
then
	process_start 'cleanup built files'
	process_exec 'rm -r ./*'
	process_end
fi

if [[ "$PROGRAM_HOST" == 'window' ]]
then
	# we need mksourceid for build windows executable
	if [[ ! -s mksourceid ]]
	then
		process_start 'configuring mksourceid for sqlcipher'
		process_exec "../configure --enable-releasemode --with-crypto-lib=none"
		process_end
	
		process_start 'building mksourceid for sqlcipher'
		process_exec 'make mksourceid'
		process_end
	fi

	options+=' --host=x86_64-w64-mingw32 --with-crypto-lib=none config_TARGET_EXEEXT=.exe'
	cflags+=" -DSQLCIPHER_CRYPTO_OPENSSL"
	ldflags+=" -lcrypt32 -lws2_32"
fi

process_start "configuring sqlcipher for $PROGRAM_HOST"
process_exec "../configure $options CFLAGS='$cflags' LDFLAGS='$ldflags'"
process_end

if [[ "$PROGRAM_HOST" == 'window' ]]
then
	# remove penguin build but keep mksourceid
	make -q clean
fi

process_start 'building sqlcipher'
process_exec 'make -j25' # threads minus 2
process_end

if ! grep -qs 'header_install' 'Makefile'
then
	echo '
header_install: sqlite3.h sqlite3ext.h
	$(INSTALL) -d $(DESTDIR)$(includedir)
	$(INSTALL) -m 0644 sqlite3.h $(DESTDIR)$(includedir)
	$(INSTALL) -m 0644 $(TOP)/src/sqlite3ext.h $(DESTDIR)$(includedir)' >> Makefile
fi

if ! grep -qs 'pc_install' 'Makefile'
then
	echo '
pc_install: sqlcipher.pc
	$(INSTALL) -d $(DESTDIR)$(pkgconfigdir)
	$(INSTALL) -m 0644 sqlcipher.pc $(DESTDIR)$(pkgconfigdir)' >> Makefile
fi

process_start 'installing sqlcipher'
process_exec 'make lib_install header_install pc_install'
process_end

update_depstat_record 'sqlcipher'