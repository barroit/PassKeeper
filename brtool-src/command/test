#!/usr/bin/bash

build_type=${1:-debug}

if ! find_scalar_word "$build_type" "$BRTOOL_BUILD_PROFILES"
then
	die "unknown build type '$build_type' to run this suit"
fi

build_prefix="$TEST_SOURCE_PREFIX"/build

export BRTOOL_BUILD_PREFIX="$build_prefix" # override BRTOOL_BUILD_PREFIX
export PKBIN="$build_prefix"/pk
export TEST_BUILD_PREFIX="$build_prefix"
export SRC_PREFIX="$PROJECT_PREFIX"/src
export TEST_TMP_PREFIX="$TEST_SOURCE_PREFIX"/tmp
export PK_CRED_CC="$TEST_TMP_PREFIX"/key
export PK_CRED_DB="$TEST_TMP_PREFIX"/db

export PKG_CONFIG_PATH="${LIBRARY_INSTALL_PREFIX}/lib64/pkgconfig:\
${LIBRARY_INSTALL_PREFIX}/lib/pkgconfig"

load_project_info

mkdir -p "$build_prefix"
cd "$build_prefix"

if ! cmake "$PROJECT_PREFIX" -DPK_TEST=1 -DCMAKE_BUILD_TYPE="${build_type^}" \
-DCMAKE_TOOLCHAIN_FILE="$CMAKE_MODULE_PREFIX"/GCC.cmake
then
	die 'stop building'
fi

if ! make -j25
then
	die 'stop building'
fi

if [[ $(ls -1q "$TEST_TMP_PREFIX" | wc -l) -gt 0 ]]
then
	rm -r "$TEST_TMP_PREFIX"/*
fi

echo "entering $TEST_SOURCE_PREFIX"
cd $TEST_SOURCE_PREFIX
echo
echo "################################STARTTEST################################"
echo

prove -j25 ./

rm -r "$TEST_TMP_PREFIX"/*
