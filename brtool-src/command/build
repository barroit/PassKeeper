#!/usr/bin/bash

export BUILD_PROFILE="${1:-debug}"
export PROGRAM_HOST="${2:-penguin}"

if ! find_scalar_word "$BUILD_PROFILE" "$BRTOOL_BUILD_PROFILES"
then
	die "build type '$BUILD_PROFILE' not found"
fi

if ! find_scalar_word "$PROGRAM_HOST" "$BRTOOL_PROGRAM_HOSTS"
then
	die "build type '$PROGRAM_HOST' not found"
fi

build_prefix="$BRTOOL_BUILD_PREFIX"/"$BUILD_PROFILE"

source "$BRTOOL_SOURCE_PREFIX"/depstat

if ! bash "$BRTOOL_SOURCE_PREFIX"/make_openssl
then
	die 'stop building'
fi

if ! bash "$BRTOOL_SOURCE_PREFIX"/make_sqlcipher
then
	die 'stop building'
fi

load_project_info

if ! depstat_match_prev 'cmake' "$PROGRAM_HOST" && [[ -d "$build_prefix" ]]
then
	rm -r $build_prefix/*
fi

echo "-- Build profile: $BUILD_PROFILE"
echo "-- Host name: $PROGRAM_HOST"

export PKG_CONFIG_PATH="${LIBRARY_INSTALL_PREFIX}/lib64/pkgconfig:\
${LIBRARY_INSTALL_PREFIX}/lib/pkgconfig"

mkdir -p "$build_prefix"
cd "$build_prefix"

argstart="$(array_index_of '--' $@)"

if [[ argstart -gt -1 ]]
then
	for arg in ${@:argstart + 2} # skip -- and adjust index to arg number
	do
		case $arg in
		'no-unused')
			flags+=' -Wno-unused'
			;;
		*)
			die "unknown flags '$arg'"
			;;
		esac
	done

	export CFLAGS="$flags"
fi

if [[ "$PROGRAM_HOST" == 'window' ]]
then
	cmake_options="-DCMAKE_TOOLCHAIN_FILE='$CMAKE_MODULE_PREFIX/MinGW-w64.cmake'"
else
	cmake_options="-DCMAKE_TOOLCHAIN_FILE='$CMAKE_MODULE_PREFIX/GCC.cmake'"
fi

cmake "$PROJECT_PREFIX" -DCMAKE_BUILD_TYPE="${BUILD_PROFILE^}" "$cmake_options"

make -j25

update_depstat_record 'cmake' "$PROGRAM_HOST"
